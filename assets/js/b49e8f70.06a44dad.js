"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5072],{7514:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>h,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>p});var n=i(4848),r=i(8453),l=i(6540);const a=e=>{let{question:s,options:i,correctIndex:r,feedback:a}=e;const[t,o]=(0,l.useState)(null),[c,d]=(0,l.useState)(!1);return(0,n.jsxs)("div",{style:{border:"2px solid var(--ifm-color-primary)",borderRadius:"10px",padding:"24px",margin:"24px 0",backgroundColor:"var(--ifm-background-color)",boxShadow:"0 2px 8px rgba(0,0,0,0.04)"},children:[(0,n.jsx)("p",{style:{color:"var(--ifm-font-color-base)"},children:(0,n.jsx)("strong",{children:s})}),(0,n.jsx)("ul",{style:{listStyleType:"none",padding:0},children:i.map(((e,s)=>(0,n.jsx)("li",{onClick:()=>(o(s),void d(!0)),style:{cursor:"pointer",margin:"6px 0",padding:"6px",border:t===s?"2px solid var(--ifm-color-primary)":"1px solid var(--ifm-color-emphasis-300)",borderRadius:"4px"},children:e},s)))}),c&&(0,n.jsx)("p",{style:{color:t===r?"var(--ifm-color-success)":"var(--ifm-color-danger)"},children:a[t]})]})};var t=i(1432);const o={},c="SQL Query Optimization",d={id:"blog/25-10-05-Database",title:"SQL Query Optimization",description:"<MultipleChoice",source:"@site/docs/blog/25-10-05-Database.mdx",sourceDirName:"blog",slug:"/blog/25-10-05-Database",permalink:"/docs/blog/25-10-05-Database",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Blog",permalink:"/docs/category/blog"},next:{title:"Fundamental Knowledge",permalink:"/docs/category/fundamental-knowledge"}},h={},p=[{value:"What is QUERY OPTIMIZER ?",id:"what-is-query-optimizer-",level:2},{value:"Logical plan",id:"logical-plan",level:3},{value:"Physical plan",id:"physical-plan",level:3},{value:"Queries examples with plans",id:"queries-examples-with-plans",level:2},{value:"How we know which plan is better",id:"how-we-know-which-plan-is-better",level:2},{value:"Reference",id:"reference",level:2}];function m(e){const s={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:l}=s;return l||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"sql-query-optimization",children:"SQL Query Optimization"})}),"\n",(0,n.jsx)("div",{id:"first-question",children:(0,n.jsx)(a,{question:(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"With Pre-conditions below, which plan is more efficient for query in the image?"}),(0,n.jsxs)(s.ul,{children:[(0,n.jsx)(s.li,{children:"1. Table Reviews have 100.000 pages with 100 rows/page, totals 10.000.000 records. Sorted on date"}),(0,n.jsx)(s.li,{children:"2. Scan 100MB/second"}),(0,n.jsx)(s.li,{children:"3. CPU time = 0.1 \u03bcs (10^-6s)/row for `FILTER predicate`"}),(0,n.jsx)(s.li,{children:"4. CPU time = 0.1 \u03bcs (10^-6s)/row for `AVG predicate`"}),(0,n.jsx)(s.li,{children:"5. Time Random disk I/O = 0.003 second per disk I/O"}),(0,n.jsx)(s.li,{children:"6. 100 rows are estimated to satisfy the predicate"})]}),(0,n.jsx)(t.A,{language:"sql",children:"SELECT AVG(RATING) FROM Reviews WHERE MID = 932;"}),(0,n.jsx)(s.img,{src:"/img/question/img_1.png",alt:"Query Optimizer Diagram",style:{maxWidth:"60%",height:"auto"}})]}),options:["Plan #1","Plan #2"],correctIndex:1,feedback:["Read this blog to know why Plan #2 is better","Correct! But plan #1 can be better WHEN  more than 10.000 rows that satisfy the predicate (100 rows is given in pre-condition 6)"]})}),"\n",(0,n.jsx)(s.h2,{id:"what-is-query-optimizer-",children:"What is QUERY OPTIMIZER ?"}),"\n",(0,n.jsxs)(s.p,{children:["SQL statement -> ",(0,n.jsx)(s.strong,{children:"QUERY OPTIMIZER"})," -> Awesome plan"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"QUERY OPTIMIZER transfer SQL queries into an efficient execution plan, one logical plan can have multiple physical plans."}),"\n"]}),"\n",(0,n.jsx)(s.h3,{id:"logical-plan",children:"Logical plan"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{className:"layered-style",children:"What"})," they do, e.g: union, selection, join, project."]}),"\n",(0,n.jsx)(s.h3,{id:"physical-plan",children:"Physical plan"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)("span",{className:"layered-style",children:"How"})," they do, e.g: nested loop join, merge join, hash join."]}),"\n",(0,n.jsx)(s.h2,{id:"queries-examples-with-plans",children:"Queries examples with plans"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"img.png",src:i(9024).A+"",width:"760",height:"578"})}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"img.png",src:i(2784).A+"",width:"764",height:"577"})}),"\n",(0,n.jsx)(s.h2,{id:"how-we-know-which-plan-is-better",children:"How we know which plan is better"}),"\n",(0,n.jsxs)(s.p,{children:["We need to ",(0,n.jsx)("span",{className:"layered-style",children:"ESTIMATE COSTS"})," to choose plan. Two key costs that QO considers:"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)("span",{className:"layered-style",children:"I/O costs"}),": reading page from storage"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)("span",{className:"layered-style",children:"CPU costs"}),": applying predicate on tuples in memory"]}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["Now you can back to the ",(0,n.jsx)(s.a,{href:"#first-question",children:"first question"})," and try to calculate the cost of each plan."]}),"\n",(0,n.jsxs)(l,{children:[(0,n.jsx)("summary",{children:"Plan #1"}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"img.png",src:i(5251).A+"",width:"747",height:"498"})})]}),"\n",(0,n.jsxs)(l,{children:[(0,n.jsx)("summary",{children:"Plan #2"}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"img.png",src:i(42).A+"",width:"713",height:"523"})})]}),"\n",(0,n.jsxs)(l,{children:[(0,n.jsx)("summary",{children:"Index is scattered over many pages"}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"img.png",src:i(6917).A+"",width:"719",height:"511"})})]}),"\n",(0,n.jsx)(s.h2,{id:"reference",children:"Reference"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(990).A+"",children:"Download PDF"})})]})}function g(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},990:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/files/lec10-06460e4e3fe0e2313613582ee30ecbfe.pdf"},9024:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/img-efc76df2dd13d4ebb4ccf00eee92c981.png"},2784:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/img2-74509fd3818f1be9a2ed672bd8b2fbc1.png"},5251:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/img_2-5401bf7c76323b474b0367859f0dcead.png"},42:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/img_3-2c1ecee6374378799e008ade3556392f.png"},6917:(e,s,i)=>{i.d(s,{A:()=>n});const n=i.p+"assets/images/img_4-0c531ee1b58793d0d66b0b1929de8964.png"}}]);